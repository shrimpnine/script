#!/bin/bash

#1 单纯比较文件是否一致 包括文件名和文件二进制内容
#   ·判断是否为编码文件
#   ·列出文件行不对的地方
#
#2: 如果是编码文件则比较文件内不一样的行
#   ·列出不一样的行
#
#3: 比较目录内是否存在相同的文件 -a == --all 比较所有
#   ·文件内相同的文件名

#指定输出对比文件的参数 默认关闭

#无法对比目录
SOURCE_DIR="/root/test/d0/"
TARGET_DIR="/root/test/d1/"
cd $SOURCE_DIR
for file in $(ls $SOURCE_DIR)
do
	source_file=${SOURCE_DIR}${file}
	target_file=${TARGET_DIR}${file}
if [ ! -e $target_file ]; then
	echo -e ${file}"\033[31m不存在，请检查服务器上目录\033[0m"
	continue
fi
if [ ! -f $source_file ]; then
	echo -e ${file}"\033[31m不是文件，跳过\033[0m"
	continue
fi
source_md5=`md5sum ${source_file} | awk '{ print $1 }'`
target_md5=`md5sum ${target_file} | awk '{ print $1 }'`
if [ ! ${source_md5} == ${target_md5} ]; then
	echo -e "\033[31m"${file}"MD5校验失败\033[0m"
fi
	source_sha1=`sha1sum ${source_file} | awk '{ print $1 }'`
	target_sha1=`sha1sum ${target_file} | awk '{ print $1 }'`
if [ ! ${source_sha1} == ${target_sha1} ]; then
	echo -e "\033[31m"${file}"SHA1校验失败\033[0m"
	fi
done


#生成文件名对比
ls -R /mnt/disk0/ >> aa.txt
ls -R /mnt/disk1/ >> bb.txt
或用du命令对比文件大小
	sed 's/\/mnt\/disk1\/Movie/\/mnt\/disk0/' bb.txt > bb.txt #替换文件中差异的目录
	diff -Bcr aa.txt bb.txt #对比

#生成md5文件然后对比
find /root/test/d0 -type f -print0 | xargs -0 md5sum >> aa.txt
find /root/test/d1 -type f -print0 | xargs -0 md5sum >> bb.txt
touch ./a.sh
cat aa.txt|while read line
do
	name1=$(echo "$line"|awk '{print $2}')
	md5_1=$(echo "$line"|awk '{print $1}')
	name2=$(grep " $name1" bb.txt|awk '{print $2}')
	md5_2=$(grep " $name1" bb.txt|awk '{print $1}')
	if [ -z "$name2" ]
	then
		echo "not in bb.txt:  $name1"
	else
		if [ "$md5_1" != "$md5_2" ]
		then
			echo "not equal:  $name1 "
		fi
	fi
done|sort
